{ "basescore": 999, "desc": "<a href=\"/problem_data/Bank/bank\" target=\"_blank\">bank</a><br><a href=\"/problem_data/Bank/bank.c\" target=\"_blank\">bank.c</a><br><a href=\"/problem_data/Bank/Makefile\" target=\"_blank\">Makefile</a>\n", "displayname": "Bank", "grader": "bank", "hint": "Hint" }
{ "basescore": 999, "desc": "<a href=\"/problem_data/Zombie/zombie_apocalypse\" target=\"_blank\">zombie_apocalypse</a><br><a href=\"/problem_data/Zombie/zombie_apocalypse.c\" target=\"_blank\">zombie_apocalypse.c</a><br><a href=\"/problem_data/Zombie/Makefile\" target=\"_blank\">Makefile</a>\n", "displayname": "Zombie Apocalpyse", "grader": "zombie", "hint": "" }
{ "basescore": 999, "desc": "<a href=\"/problem_data/Infinite/infinite_campus\" target=\"_blank\">infinite_campus</a><br><a href=\"/problem_data/Infinite/infinite_campus.c\" target=\"_blank\">infinite_campus.c</a><br><a href=\"/problem_data/Infinite/Makefile\" target=\"_blank\">Makefile</a>\n", "displayname": "Infinite Campus", "grader": "infinite", "hint": "Hint" }
{ "basescore": 999, "desc": "<a href=\"/problem_data/Overflow1/overflow1\" target=\"_blank\">overflow1</a><br><a href=\"/problem_data/Overflow1/overflow1.c\" target=\"_blank\">overflow1.c</a><br><a href=\"/problem_data/Overflow1/Makefile\" target=\"_blank\">Makefile</a>\n", "displayname": "Overflow1", "grader": "overflow1", "hint": "Hint" }
{ "basescore": 999, "desc": "<a href=\"/problem_data/Overflow1/overflow2\" target=\"_blank\">overflow2</a><br><a href=\"/problem_data/Overflow1/overflow2.c\" target=\"_blank\">overflow2.c</a><br><a href=\"/problem_data/Overflow2/Makefile\" target=\"_blank\">Makefile</a>\n", "displayname": "Overflow2", "grader": "overflow2", "hint": "Hint" }

{ "basescore": 999, "desc": "Kelvin the Frog is playing a card game. Each n cards (0<n<100) has a number on the front and a number on the back. Kelvin sees all the numbers of the front and then the dealer shuffles the numbers and shows the back. These cards are created in a fashion where the sum of the differences between each card’s front/back is the lowest. If kelvin the frog can guess the correct sum, he wins a racoon. Given front numbers Ki (0 ≤ i<n, 0<k<50) and the back numbers Gi (0 ≤ i<n, 0<g<50), determine what number kelvin the frog must guess in order to eat his racoon.\n", "displayname": "Cards", "grader": "thing", "hint": "" }
{ "basescore": 999, "desc": "Kelvin the Frog recently learned about the fibonacci sequence. A fibonacci sequence starts with 0 and 1, and the next term is the sum of the previous two terms(Fn = Fn-1 + Fn-2). The sequence goes as (1, 1, 2, 3, 5, 8, 13, …). Kelvin the Frog nicely arranged some size of fibonacci sequence. Jack sees Kelvin’s beautifully arranged sequence and immediately proceeds to spill numbers all over Kelvin the frog’s sequence, interupting it with random numbers. Kelvin the Frog forgot wants to get rid of Jack’s dirty numbers and retrieve his fibonacci sequence. Given a size n (0<n<200) with numbers k (0<k<1000) in order of Kelvin’s original sequence, determine Kelvin’s maximum original size of fibonacci sequence.\nExamples:\nInput: 10 1 3 5 8 1 2 13 3 5 8\nOutput: 6\nDetails: The original sequence is 1, 1, 2, 3, 5, 8, length being 6.\n", "displayname": "Hidden Fibonacci", "grader": "thing", "hint": "Hint" }
